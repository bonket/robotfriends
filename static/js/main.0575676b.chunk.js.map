{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","width","height","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundy","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","res","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.0575676b.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${ id }`} width='200' height='200' />\r\n            <div>\r\n                <h2>{ name }</h2>\r\n                <p>{ email }</p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n/*\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            \r\n            \r\n            </div>\r\n            \r\n            \r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n*/\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ( { robots} ) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n            robots.map((user, i) => {\r\n                return (\r\n                <Card  \r\n                    key={i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email} />\r\n              );\r\n            })\r\n        }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst SearchBox = ( { searchChange} ) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={ searchChange }/>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n\r\n\r\nconst Scroll = ( props ) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500' }}>\r\n            { props.children }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundy extends Component {\r\n    \r\n    constructor (  ) {\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oops that is not good </h1>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ErrorBoundy;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n//import { robots } from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundy from '../components/ErrorBoundry';   \r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(res => {\r\n                return res.json();\r\n        })\r\n            .then(users => {\r\n                this.setState({robots: users})\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        //destructuring\r\n        const {robots, searchfield} = this.state;\r\n\r\n        //filter is an array method\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        //this is an array length in JavaScript\r\n        return !robots.length? <h1>'Loading'</h1> :  \r\n\r\n\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={ this.onSearchChange }/>\r\n                    <Scroll>\r\n                        <ErrorBoundy>\r\n                            <CardList robots={ filteredRobots } />\r\n                        </ErrorBoundy>\r\n                    </Scroll>\r\n                </div>\r\n    }\r\n    \r\n\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}